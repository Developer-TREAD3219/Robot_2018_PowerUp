// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team3219.robot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;

import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PowerDistributionPanel;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    private static final int RIGHT_ENCODER_B = 3;
	private static final int RIGHT_ENCODER_A = 2;
	private static final int LEFT_ENCODER_B = 1;
	private static final int LEFT_ENCODER_A = 0;
	private static final int SHIFTER_SOLENOID = 0;
	public static final int SHOOTER_LIFT_TWO = 2;
	public static final int SHOOTER_LIFT_ONE = 1;
	public static final int INFEED_LIMIT_SWITCH_DIO = 5;
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX driveTrainFrontLeft;
    public static WPI_TalonSRX driveTrainBackLeft;
    public static SpeedControllerGroup driveTrainLeftDrive;
    public static Encoder leftEncoder;
    public static WPI_TalonSRX driveTrainFrontRight;
    public static WPI_TalonSRX driveTrainBackRight;
    public static SpeedControllerGroup driveTrainRightDrive;
    public static Encoder rightEncoder;
    public static DifferentialDrive driveTrainDifferentialDrive;
    public static PowerDistributionPanel powerManagmentPowerDistributionPanel;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static WPI_TalonSRX leftShooterMotor;
    public static WPI_TalonSRX rightShooterMotor;
    public static DoubleSolenoid liftsolenoid;
    public static DigitalInput limitswitch;
    public static Solenoid DriveShifter;
    
    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        driveTrainFrontLeft = new WPI_TalonSRX(1);
        driveTrainFrontLeft.setName("DriveTrain", "driveTrainFrontLeft");
        
        driveTrainBackLeft = new WPI_TalonSRX(2);
        driveTrainBackLeft.setName("DriveTrain", "driveTrainBackLeft");
        
        
        driveTrainLeftDrive = new SpeedControllerGroup(driveTrainFrontLeft, driveTrainBackLeft  );
        driveTrainLeftDrive.setName("DriveTrain", "LeftDrive");
        
        driveTrainFrontRight = new WPI_TalonSRX(3);
        driveTrainFrontRight.setName("DriveTrain", "driveTrainFrontRight");
       
        
        driveTrainBackRight = new WPI_TalonSRX(4);
        driveTrainBackRight.setName("DriveTrain", "driveTrainBackRight");
        
        
        driveTrainRightDrive = new SpeedControllerGroup(driveTrainFrontRight, driveTrainBackRight  );
        driveTrainRightDrive.setName("DriveTrain", "RightDrive");
        
        driveTrainDifferentialDrive = new DifferentialDrive(driveTrainLeftDrive, driveTrainRightDrive);
        driveTrainDifferentialDrive.setName("DriveTrain", "DifferentialDrive");
        
        
        leftEncoder = new Encoder(LEFT_ENCODER_A, LEFT_ENCODER_B);
        rightEncoder = new Encoder(RIGHT_ENCODER_A, RIGHT_ENCODER_B);

        powerManagmentPowerDistributionPanel = new PowerDistributionPanel(0);
        powerManagmentPowerDistributionPanel.setName("DriveTrain", "PowerDistributionPanel");
        
        // Shooter
        leftShooterMotor = new WPI_TalonSRX(5); //TODO find out which motor # this is
        leftShooterMotor.setName("Shooter", "leftShooterMotor");
        
        rightShooterMotor = new WPI_TalonSRX(6);
        rightShooterMotor.setName("Shooter", "rightShooterMotor");
        
        liftsolenoid = new DoubleSolenoid(SHOOTER_LIFT_ONE, SHOOTER_LIFT_TWO);
        limitswitch = new DigitalInput(INFEED_LIMIT_SWITCH_DIO);
        
        DriveShifter = new Solenoid(SHIFTER_SOLENOID);
    }
}
