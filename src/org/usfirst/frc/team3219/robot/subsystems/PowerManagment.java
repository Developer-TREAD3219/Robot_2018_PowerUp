// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc.team3219.robot.subsystems;

import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;

import org.usfirst.frc.team3219.robot.RobotMap;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.PowerDistributionPanel;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class PowerManagment extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final PowerDistributionPanel powerDistributionPanel = RobotMap.powerManagmentPowerDistributionPanel;
    private double startTime;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop
       double voltage = powerDistributionPanel.getVoltage();
       SmartDashboard.putNumber( "Voltage", voltage);
       double totalCurrent = powerDistributionPanel.getTotalCurrent();
       SmartDashboard.putNumber("totalCurrent", totalCurrent);
       double motor0Current = powerDistributionPanel.getCurrent(0);
       SmartDashboard.putNumber("Current1", motor0Current);
       double motor1Current = powerDistributionPanel.getCurrent(1);
       SmartDashboard.putNumber("Current2", motor1Current);
       double motor2Current = powerDistributionPanel.getCurrent(2);
       SmartDashboard.putNumber("Current3", motor2Current);
       double motor3Current = powerDistributionPanel.getCurrent(3);
       SmartDashboard.putNumber("Current4", motor3Current);
       double watts = (motor0Current + motor1Current + motor2Current + motor3Current) * voltage;
       double elapsedTime = System.nanoTime() - this.startTime;
       double wattseconds = watts * elapsedTime;
       startTime = System.nanoTime();
       SmartDashboard.putNumber("watts", wattseconds);
       
    }

	public void init() {
		startTime = System.nanoTime();
		
		// TODO Auto-generated method stub
		
	}

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

